<!DOCTYPE HTML>
<HTML xmlns:WorkSpace xmlns:Tree xmlns:Grid xmlns:Form>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>缓存管理</title>

<link href="../../tools/tssJS/css/tss.all.css" rel="stylesheet">
<link href="../../css/css.css" rel="stylesheet">

<script src="../../tools/tssJS/tssJS.all.js"></script>
<script src="../../tools/tssUtils.js"></script>

<style>
  #page1FormDiv {
    display:none;
    background-color: #BEC6EE;
    border:1px solid #416371;
    position: absolute;
    width: 600px;    
    height: 320px;  
    margin-left: 200px;
    margin-top: 200px;
    padding: 10px 10px 10px 10px;
  }

  #page1HitRate { left:60px; top:4px; font-weight:bold; }
  #page1HitRate:hover { cursor: pointer; }
  
</style>

<SCRIPT type="text/javascript">
<!--
	/* 后台响应数据节点名称  */
	XML_MAIN_TREE = "CacheTree";
	XML_MAIN_GRID = "PoolGrid";
	XML_HIT_RATE  = "HitRate";
	XML_CACHE_ITEMS = "CacheItemList";
	XML_CACHE_STRATEGY  = "CacheStrategy";

	/* XMLHTTP请求地址汇总  */
	URL_INIT_TREE    = NO_AUTH_PATH + "cache/list";
	URL_INIT_GRID    = NO_AUTH_PATH + "cache/grid";
	URL_CACHE_DETAIL = NO_AUTH_PATH + "cache/list/";
	URL_VIEW_ITEM    = NO_AUTH_PATH + "cache/item";
	URL_CACHE_CLEAR  = NO_AUTH_PATH + "cache/release";
	URL_CACHE_INIT   = NO_AUTH_PATH + "cache/init";	
	
	if(IS_TEST) {
		URL_INIT_TREE    = "data/cache_tree.xml?";
		URL_INIT_GRID    = "data/cache_grid.xml?";
		URL_CACHE_DETAIL = "data/cache1.xml?";
		URL_CACHE_CLEAR  = "data/_success.xml?";
		URL_CACHE_INIT   = "data/_success.xml?";
		URL_VIEW_ITEM    = "data/item.xml?";
	}	
	 
	/*页面初始化 */
	function init() {
		initPaletteResize();
		initMenus();
		initEvents();

		Element.moveable($$("page1FormDiv"));

		loadInitData();
		loadInitGrid();
	}

	/* 点击树刷新按钮 */
	function onClickTreeBtRefresh() {
		loadInitData();
		loadInitGrid();

		$("#page1HitRate").html("");
	}

	/* 页面初始化加载数据(包括工具条、菜单树) */
	function loadInitData() {
		$.ajax({
			url : URL_INIT_TREE, 
			onresult : function() {					
				var tree = $.T("tree", this.getNodeValue(XML_MAIN_TREE)); 
				tree.onTreeNodeDoubleClick = function(ev) {
					showCachePools();
				}
				tree.onTreeNodeRightClick = function(ev) {
					setTimeout(function() {
						if( this.el.contextmenu ) {
							this.el.contextmenu.show(eventObj.clientX, eventObj.clientY);                
						}
					}, 100);
				}
			}
		});
	}

	// 初始化右边Grid
	function loadInitGrid() {
		$.ajax({
			url : URL_INIT_GRID, 
			onresult : function() {
				$.G("page1Grid", this.getNodeValue(XML_MAIN_GRID)); 	
			}
		});
	}

	function initMenus() {
		var item1 = {
			label:"维护",
			callback:showCachePools,
			icon:"images/edit.gif"
		}
		var item2 = {
			label:"初始化",
			callback:initCache,
			icon:"images/init.gif",
			visible:function() {return getTreeAttribute("released") == "1";}
		}
		var item3 = {
			label:"清空",
			callback:clearCache,
			icon:"images/clear.gif"
		}

		var menu = new $.Menu();
		menu.addItem(item1);
		menu.addSeparator();
		menu.addItem(item2);
		menu.addItem(item3);

		$$("tree").contextmenu = menu;
	}
 
	/* 初始化缓存池  */
	function initCache() {
		var treeNode = getActiveTreeNode();
		if ( treeNode ) {
			$.ajax({
				url : URL_CACHE_INIT + "/" + treeNode.id,
				onsuccess : function() {
					treeNode.setAttribute("released", "0");
					showCachePools();
				}
			});
		}
	}

	/* 清空缓存池  */
	function clearCache() {
		var treeNode = getActiveTreeNode();
		if ( treeNode ) {
			$.ajax({
				url : URL_CACHE_CLEAR + "/" + treeNode.id,
				onsuccess : function() {
					treeNode.setAttribute("released", "1");   
					showCachePools();
				}
			});
		}
	}

	/*
	 *	缓存池详细信息 
	 *	参数：	string:page                 页码
				boolean:showStrategy        false的话只刷新grid列表
	 */
	function showCachePools(page, justRefreshGrid) {
		var tree = $.T("tree");
		var treeNode = tree.getActiveTreeNode();

		var onresult = function() {
			var strategyXML = this.getNodeValue(XML_CACHE_STRATEGY);
			if( strategyXML && !justRefreshGrid) {
				$.F("page1Form", strategyXML);
			}

			$.createGridToolBar(this.getNodeValue(XML_PAGE_INFO)); // 重新创建grid工具条

			var gridDataXML = this.getNodeValue(XML_CACHE_ITEMS);
			if( gridDataXML ) {
				var grid = $G("page1Grid", gridDataXML);    
				initGridMenuAndEvents();
			}		
			
			//设置点击率
			var hitRateData = this.getNodeValue(XML_HIT_RATE);
			if( hitRateData ) {
				$$("page1HitRate").innerHTML = "『 " + treeNode.name + "-命中率：" + hitRateData + " 』";
				$$("page1HitRate").onclick = function() {
					var formObj = $1("page1FormDiv");
			        Element.show(formObj);
			        $$("page1FormClose").onclick = function() {
			            $(formObj).hide();
			        }
				}
			}
		}
		
		Ajax({
			url : URL_CACHE_DETAIL + treeNode.id,
			onresult :onresult
		});
	}
	 
	/* 创建grid工具条 */
	function createGridToolBar(xmlData) {
		$.initGridToolBar($$("gridToolBar"), xmlData, function(page) {
				showCachePools(page, true);
			}
		);
	}

	/* Grid菜单初始化 */
	function initGridMenuAndEvents() {
		var item1 = {
			label:"查看缓存项信息",
			callback:showItemInfo,
			icon:"images/view.gif"
		}
		var item2 = {
			label:"清除缓存项",
			callback:removeCacheItem,
			icon:"images/clear.gif"
		}

		var menu = new $.Menu();
		menu.addItem(item1);
		menu.addItem(item2);

		var gridEl = $1("page1Grid");
		gridEl.contextmenu = menu;

		gridEl.onRightClickRow = function(event) {
			this.contextmenu.show(event.clientX, event.clientY);
		}
	}

	/* 查看缓存项信息  */
	function showItemInfo() { 
		var itemKey = $.G("page1Grid").getColumnValue("key");
		var poolCode = getTreeNodeId();

		var url = URL_VIEW_ITEM + "/" + poolCode + "?key=" + itemKey;
		window.open(url, "查看缓存项信息", "");
	}

	function removeCacheItem() {
		var itemKey = $.G("page1Grid").getColumnValue("key");
		var poolCode = getTreeNodeId();
		$.ajax({
			url : URL_VIEW_ITEM + "/" + poolCode + "?key=" + itemKey,
			method : "DELETE",
			onsuccess : function() {
				 $.G("page1Grid").deleteSelectedRow();
			}
		});
	}

	window.onload = init;

//-->
</SCRIPT>

</head>

<body>

<!-- 版面 开始 -->
<table class="panel">
  <tr class="header"> <td/><td/><td/><td/> </tr>
  <tr class="body"> 
	<td/>
	<td id="palette">
	  <div>
	  	<div class="bar">
			<span class="icon"></span>缓存池
			<span class="refreshTreeBT" title="刷新"></span>
			<span class="paletteSwitch" id="paletteClose"></span>
		</div>
		<Tree:Box id="tree"><div class="loading"></div></Tree:Box>
	  </div> 
	</td>
	<td class="groove">
		<table>
			<tr>
			  <td id="gridTitle">※缓存池明细
				<span id="page1HitRate"></span>
				<span class="buttonBox" id="gridToolBar"></span>
			  </td>
			</tr>
			<tr> <td> <Grid:Box id="page1Grid"></Grid:Box> </td> </tr>
		</table>                            
	</td>
	<td/>
  </tr>
  <tr class="footer"> <td/><td/><td/><td/> </tr>
</table>
<!-- 版面 结束 -->
 
  <div id="page1FormDiv">
    <XForm:Box id="page1Form" baseurl="../../xform/" editable="true"></XForm:Box>    
    <div class="bt">
    	<input type="button" class="btStrong" value="隐藏" id="page1FormClose"/>
     </div>
  </div>

</body>
</html>